import config_reader
from config_reader import *

class message:
    def __init__(self, text):
        self.text = text
        self.chat_id = CHANNEL_ID;
        self.bot_token = config.bot_token.get_secret_value();
        self.parse_mode='HTML'
        

    def sendd_message(self):
        requests.get(f'https://api.telegram.org/bot{self.bot_token}/sendMessage?chat_id={self.chat_id}&text={self.text}&parse_mode={self.parse_mode}');

def reqWorldClock():
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ - worldclock");
    req = requests.get('http://worldclockapi.com/api/json/utc/now')
    if (bool(req)): # –ï—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 
        global reqDate;
        reqDate =  datetime.datetime.strptime(req.json()['currentDateTime'], "%Y-%m-%dT%H:%MZ"); #–ü–∞—Ä—Å–∏–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        reqDate = reqDate + timedelta(hours=3) # –°–º–µ—â–∞–µ–º –≤—Ä–µ–º—è –¥–æ –ú–°–ö
        reqDate = reqDate + timedelta(days=-1) # –°–º–µ—â–∞–µ–º –¥–Ω–∏ –Ω–∞ 1 –¢.–∫ –ê—Ä—Å–∞–≥–µ—Ä–∞ –ø–æ—Å—Ç–∏—Ç –∏–Ω—Ñ—É –∑–∞ –≤—á–µ—Ä–∞—à–Ω–∏–π –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å

        reqDayOfTheWeek = req.json()['dayOfTheWeek']; # –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏
        global date_now;
        global time_now;
        date_now = reqDate.strftime("%Y-%m-%d") #–î–∞—Ç–∞
        time_now = reqDate.strftime("%H:%M") #–í—Ä–µ–º—è

        req.close();
        print("–†–∞–∑–æ—Ä–≤–∞–Ω–∞ —Å–≤—è–∑—å - worldclock");
    else:
        print("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ - worldclock");
        exit();

def reqArsagera():
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ - Arsagera");
    global requestNameMetrik
    requestNameMetrik= "fa"; # –ú–µ—Ç—Ä–∏–∫–∞ –ø–æ –∞–∫—Ü–∏—è–º –§–ê

    req = requests.get(f"https://arsagera.ru/api/v1/funds/{requestNameMetrik}/fund-metrics/?date={date_now}"); #GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∞–π—Ç —Å –∞—Ä—Å–∞–≥–µ—Ä—ã –ø–æ –º–µ—Ç—Ä–∏–∫–µ
    global valueMetrik;
    

    if ((req.status_code != 404 and 400 and 500)): #–ï—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–∫–∏
        if not bool(req.json()['data']):
            print(f"–ó–∞ {date_now} –¥–∞–Ω–Ω—ã—Ö –ø–æ –±–∏—Ä–∂–µ–≤—ã–º –æ—Ä–∏–µ–Ω—Ç–∏—Ä–∞–º –Ω–µ—Ç!");
            valueMetrik = 0;
        else:
            
            valueMetrik = req.json()['data'][0]['nav_per_share'];
            print(f'–ë–∏—Ä–∂–µ–≤—ã–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã –ê—Ä—Å–∞–≥–µ—Ä–∞ {requestNameMetrik.swapcase()}, –Ω–∞ –ø–µ—Ä–∏–æ–¥ {date_now}:', valueMetrik);
    else:
        print(req, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ - Arsagera");
    req.close();
    print("–†–∞–∑–æ—Ä–≤–∞–Ω–∞ —Å–≤—è–∑—å - Arsagera");

def synCheckClock() -> bool:
    while(True):
        reqWorldClock();
        if(int(time_now.split(sep=':')[0]) >= 19 and int(time_now.split(sep=':')[0]) < 20): # –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤ –ü–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1 —á–∞—Å –º–µ–Ω—å—à–µ
            time.sleep(3600-int(time_now.split(sep=':')[1])*60) # –û—Ç—Å—á—ë—Ç –¥–æ 00 –º–∏–Ω—É—Ç 
            return True
        else:
            time.sleep(3500)

def sendInfoToChannel():
    global reqDate;
    global date_now;
    global time_now;
    global preValueMetrik;

    while(True):
        print("–í–æ—à–ª–∏ –≤ —Ü–∏–∫–ª –ê—Ä—Å–∞–≥–µ—Ä—ã")
        
        date_now = reqDate.strftime("%Y-%m-%d") #–î–∞—Ç–∞
        time_now = reqDate.strftime("%H:%M") #–í—Ä–µ–º—è

        reqArsagera()

        print(f"–î–∞—Ç–∞ —Å–µ–≥–æ–¥–Ω—è: {date_now}")

        if(valueMetrik!=0 and preValueMetrik!=0): # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –¥–∞–Ω–Ω—ã–µ –ø–æ –∞—Ä—Å–∞–≥–µ—Ä–µ –µ—Å—Ç—å
            smile = '‚ÜóÔ∏è';
            diffMetrik = 0;

            if(valueMetrik/preValueMetrik > 1):
                diffMetrik = round((valueMetrik/preValueMetrik - 1)*100, 1);
                smile = '‚ÜóÔ∏è';
            else:
                diffMetrik = -round((1-valueMetrik/preValueMetrik)*100, 1);
                smile = '‚ÜòÔ∏è';

            preValueMetrik = valueMetrik;
            mesa = message(f'üí∞–ë–∏—Ä–∂–µ–≤—ã–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã <b>–ê—Ä—Å–∞–≥–µ—Ä–∞ –§–ê</b>üí∞ \n\n–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞—è –Ω–∞ –¥–∞—Ç—É <b>{date_now}</b> ‚Äî <b><u>{round(valueMetrik,0)}</u></b> —Ä—É–±–ª–µ–π\n\n–¶–µ–Ω–∞ –∑–∞ –ø–∞–π –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–∞ <b>{diffMetrik}%25</b>{smile}\n\n%23–ê—Ä—Å–∞–≥–µ—Ä–∞') # %23 - –∑–∞–º–µ–Ω—è–µ—Ç —Å–∏–º–≤–æ–ª # –ê %25 - %
            mesa.sendd_message();
            

        elif(valueMetrik!=0):
            mesa = message(f'üí∞–ë–∏—Ä–∂–µ–≤—ã–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã <b>–ê—Ä—Å–∞–≥–µ—Ä–∞ –§–ê</b>üí∞ \n\n–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞—è –Ω–∞ –¥–∞—Ç—É <b>{date_now}</b> ‚Äî <b><u>{round(valueMetrik,0)}</u></b> —Ä—É–±–ª–µ–π\n\n%23–ê—Ä—Å–∞–≥–µ—Ä–∞') # %23 - –∑–∞–º–µ–Ω—è–µ—Ç —Å–∏–º–≤–æ–ª #
            print(mesa)
            mesa.sendd_message();
            preValueMetrik = valueMetrik;

        reqDate = reqDate + timedelta(days=1) # –°–º–µ—â–∞–µ–º –¥–µ–Ω—å –Ω–∞ 1 –∏ –∑–∞—Å—ã–ø–∞–µ–º –Ω–∞ 24 —á–∞—Å–∞
        print(f"–ó–∞–≤—Ç—Ä–∞—à–Ω—è—è –¥–∞—Ç–∞: {reqDate.year}-{reqDate.day}-{reqDate.month}")
        time.sleep(86440) # –∑–∞—Å—ã–ø–∞–µ–º –Ω–∞ 24 —á–∞—Å–∞ 


#--------------------------------------------------------------------

def main():
    
    print("–°—Ç–∞—Ä—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã")

    #–¢–µ—Å—Ç
    global reqDate;
    global date_now;
    global time_now;
    global preValueMetrik;
    preValueMetrik = 0;

    reqDate = datetime.datetime.today();
    reqDate = reqDate + timedelta(days=-7) # –°–º–µ—â–∞–µ–º –≤—Ä–µ–º—è –¥–æ –ú–°–ö ##############################!!!!
    date_now = reqDate.strftime("%Y-%m-%d") #–î–∞—Ç–∞
    time_now = reqDate.strftime("%H:%M") #–í—Ä–µ–º—è

    #synCheckClock() # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –º–∏—Ä–æ–≤—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –¥–æ 12:00
    sendInfoToChannel();

if __name__ == "__main__":
    main()
